var name = 'High CPU'

var triggerType = 'threshold'

// Thresholds
var crit = 90

// Query details
var db = 'telegraf'
var rp = '30_days'
var measurement = 'cpu'
var groupBy = ['host']
var whereFilter = lambda: TRUE

// Subject and text for email
var message = '{{.Level}}:  High user CPU usage on {{ index .Tags "host" }}'
var details = '{{.Level}}: User CPU usage reached {{ index .Fields "value" | printf "%.2f" }} on {{ index .Tags "host"}} <a href="http://vm19.nubes.stfc.ac.uk:3000">View</a><br><br> {{.Time}}'

// Details for storing alert history in InfluxDB
var outputDB = 'kapacitor'
var outputRP = '30_days'
var outputMeasurement = 'alerts'
var idVar = name + ':{{.Group}}'
var idTag = 'alertID'
var levelTag = 'level'
var messageField = 'message'
var durationField = 'duration'

var data = stream
    |from()
        .database(db)
        .retentionPolicy(rp)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)
    |eval(lambda: "usage_user")
        .as('value')

var trigger = data
    |alert()
        .crit(lambda: "value" > crit)
        .stateChangesOnly()
        .message(message)
        .id(idVar)
        .idTag(idTag)
        .levelTag(levelTag)
        .messageField(messageField)
        .durationField(durationField)
        .details(details)
        .email()

trigger
    |influxDBOut()
        .create()
        .database(outputDB)
        .retentionPolicy(outputRP)
        .measurement(outputMeasurement)
        .tag('alertName', name)
        .tag('triggerType', triggerType)
